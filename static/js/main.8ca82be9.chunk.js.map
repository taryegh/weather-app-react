{"version":3,"sources":["components/Header.js","components/Form.js","components/Weather.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","Form","props","onSubmit","getWeather","type","name","placeholder","Weather","city","country","temperature","humidity","description","maxTemp","minTemp","error","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","undefined","bind","assertThisInitialized","document","getElementById","pause","e","preventDefault","target","elements","value","fetch","concat","apiCall","json","data","play","setState","Math","round","main","temp","sys","weather","temp_max","temp_min","components_Header","components_Form","components_Weather","React","Component","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.8ca82be9.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1>Weather <i>live</i></h1>\n      <p>Check your temperature now.</p>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Form(props) {\n  return (\n    <form className=\"form\" onSubmit={props.getWeather}>\n      <input type=\"text\" name=\"city\" placeholder=\"add City\" /> <br/>\n      <input type=\"text\" name=\"country\" placeholder=\"add Country\" /><br/>\n      <button>Fetch</button>\n    </form>\n  );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction Weather(props) {\n  return (\n    <div className=\"weather\">\n      {props.city && props.country && (\n        <h1>\n          {props.city}, {props.country}{\" \"}\n        </h1>\n      )}\n\n      {props.temperature && <h2>Temperature: {props.temperature} celsius</h2>}\n\n      {props.humidity && <h2>Humidity: {props.humidity} %</h2>}\n\n      {props.description && <h2>{props.description}</h2>}\n\n      {props.maxTemp && <h3>Min Temp: {props.minTemp} celsius</h3>}\n\n      {props.minTemp && <h3>Max Temp: {props.maxTemp} celsius</h3>}\n\n      {props.error && <h2>{props.error}</h2>}\n    </div>\n  );\n}\n\nexport default Weather;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\n\nconst API_KEY = \"1a1a1b798dbee214ab3fd073784f6705\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      maxTemp: undefined,\n      minTemp: undefined,\n      error: undefined\n    };\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n  componentDidMount() {\n    const video = document.getElementById(\"myVideo\");\n    video.pause();\n  }\n\n  async getWeather(e) {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const apiCall = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`\n    );\n\n    const data = await apiCall.json();\n\n    if (city && country) {\n      const video = document.getElementById(\"myVideo\");\n      video.play();\n\n      this.setState({\n        temperature: Math.round(data.main.temp),\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        maxTemp: data.main.temp_max,\n        minTemp: data.main.temp_min,\n        error: \"\"\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        maxTemp: undefined,\n        minTemp: undefined,\n        error: \"You should indicate city and the country.\"\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"right\">\n          <Form getWeather={this.getWeather} />\n          <Weather\n            temperature={this.state.temperature}\n            city={this.state.city}\n            country={this.state.country}\n            humidity={this.state.humidity}\n            description={this.state.description}\n            error={this.state.error}\n            maxTemp={this.state.maxTemp}\n            minTemp={this.state.minTemp}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}